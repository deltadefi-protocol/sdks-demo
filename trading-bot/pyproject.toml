[project]
name = "trading-bot"
version = "0.1.0"
description = "DeltaDeFi trading bot"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pycardano>=0.12.0",
    "aiohttp>=3.10.0",
    "aiosqlite>=0.20.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.7.0",
    "python-dotenv>=1.0.0",
    "structlog>=24.0.0",
    "sidan-binance-py>=0.0.1",
    "pyyaml>=6.0.0",
    "deltadefi>=0.1.0",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=0.25.0",
    "ruff>=0.12.10",
    "mypy>=1.17.1",
    "pre-commit>=4.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "RUF",  # ruff-specific rules
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]

ignore = [
    "RUF006",  # Store a reference to the return value of `asyncio.create_task` - Allow fire-and-forget tasks
    "E501",    # Line too long - handled by formatter
    "W505",    # Doc line too long - handled by formatter
    "E203",    # Whitespace before ':' - conflicts with ruff formatter
    "E231",    # Missing whitespace after ',' - handled by formatter
    "SIM103",  # Return condition directly - sometimes explicit is clearer
    "SIM105",  # Use contextlib.suppress - prefer explicit exception handling
    "SIM108",  # Use ternary operator - sometimes if/else is clearer
]

[tool.ruff.lint.isort]
known-first-party = ["bot"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert statements in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "-v --tb=short"
